{"/home/usuario/workspace/Pract09/src/note.ts":{"path":"/home/usuario/workspace/Pract09/src/note.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":28}},"5":{"start":{"line":10,"column":24},"end":{"line":10,"column":49}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":53}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":32}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":48}},"9":{"start":{"line":14,"column":18},"end":{"line":17,"column":9}},"10":{"start":{"line":18,"column":19},"end":{"line":18,"column":38}},"11":{"start":{"line":19,"column":8},"end":{"line":25,"column":11}},"12":{"start":{"line":20,"column":12},"end":{"line":23,"column":13}},"13":{"start":{"line":21,"column":16},"end":{"line":21,"column":68}},"14":{"start":{"line":22,"column":16},"end":{"line":22,"column":23}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":22}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":58}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":32}},"18":{"start":{"line":30,"column":24},"end":{"line":30,"column":56}},"19":{"start":{"line":31,"column":18},"end":{"line":34,"column":9}},"20":{"start":{"line":35,"column":19},"end":{"line":35,"column":38}},"21":{"start":{"line":36,"column":8},"end":{"line":42,"column":11}},"22":{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},"23":{"start":{"line":38,"column":16},"end":{"line":38,"column":72}},"24":{"start":{"line":39,"column":16},"end":{"line":39,"column":23}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":22}},"26":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"27":{"start":{"line":46,"column":8},"end":{"line":46,"column":32}},"28":{"start":{"line":47,"column":23},"end":{"line":47,"column":55}},"29":{"start":{"line":48,"column":8},"end":{"line":52,"column":11}},"30":{"start":{"line":49,"column":12},"end":{"line":50,"column":26}},"31":{"start":{"line":50,"column":16},"end":{"line":50,"column":26}},"32":{"start":{"line":51,"column":12},"end":{"line":51,"column":75}},"33":{"start":{"line":55,"column":25},"end":{"line":55,"column":50}},"34":{"start":{"line":56,"column":22},"end":{"line":56,"column":74}},"35":{"start":{"line":57,"column":8},"end":{"line":59,"column":11}},"36":{"start":{"line":58,"column":12},"end":{"line":58,"column":60}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":32}},"38":{"start":{"line":63,"column":25},"end":{"line":63,"column":57}},"39":{"start":{"line":64,"column":21},"end":{"line":64,"column":48}},"40":{"start":{"line":65,"column":8},"end":{"line":65,"column":63}},"41":{"start":{"line":68,"column":0},"end":{"line":68,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":21}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":39},"end":{"line":27,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":38},"end":{"line":19,"column":39}},"loc":{"start":{"line":19,"column":47},"end":{"line":25,"column":9}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":42},"end":{"line":44,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":38},"end":{"line":36,"column":39}},"loc":{"start":{"line":36,"column":47},"end":{"line":42,"column":9}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":29},"end":{"line":53,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":28},"end":{"line":48,"column":29}},"loc":{"start":{"line":48,"column":37},"end":{"line":52,"column":9}},"line":48},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":21},"end":{"line":60,"column":5}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":57,"column":22},"end":{"line":57,"column":23}},"loc":{"start":{"line":57,"column":30},"end":{"line":59,"column":9}},"line":57},"9":{"name":"(anonymous_9)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":27},"end":{"line":66,"column":5}},"line":61}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":23,"column":13}},{"start":{"line":20,"column":12},"end":{"line":23,"column":13}}],"line":20},"1":{"loc":{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},{"start":{"line":37,"column":12},"end":{"line":40,"column":13}}],"line":37},"2":{"loc":{"start":{"line":49,"column":12},"end":{"line":50,"column":26}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":50,"column":26}},{"start":{"line":49,"column":12},"end":{"line":50,"column":26}}],"line":49}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,1],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/workspace/Pract09/src/note.ts","sources":["/home/usuario/workspace/Pract09/src/note.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs'\nconst chalk = require('chalk')\nconst path = require('path')\n\nexport class Note{\n    constructor(){}\n    \n    addNote(title:string,body:string,color:string,autor:string){\n        let pathToAdd = path.join('notes',autor)\n        fs.mkdirSync(pathToAdd,{recursive:true})\n        title = title + '.json'\n        pathToAdd = path.join(pathToAdd, title)\n        let inf = {\n            body: body,\n            color: color\n        };\n        let data = JSON.stringify(inf)\n        fs.writeFile(pathToAdd,data,(err) =>{\n            if(err){\n                console.log(chalk.red('Error al crear el fichero'))\n                return\n            }\n            throw err\n            \n        })\n        console.log(chalk.green(\"Nota creada con exito\"))\n    }   \n\n    modifyNote(body:string,color:string,title:string,autor:string){\n        title = title + '.json'\n        let pathToMod = path.join('notes',autor, title)\n        let inf = {\n            body: body,\n            color: color\n        }\n        let data = JSON.stringify(inf)\n        fs.writeFile(pathToMod,data,(err) =>{\n            if(err){\n                console.log(chalk.red('Error al modificar el fichero'))\n                return\n            }\n            throw err\n            \n        })\n        console.log(chalk.green(\"Nota modificada con exito\"))\n    }\n\n    removeNote(autor:string,title:string){\n        title = title + '.json'\n        let pathToRm = path.join('notes',autor, title)\n        fs.unlink(pathToRm,(err)=>{\n            if(err) throw err\n            console.log(chalk.red('El fichero ha sido borrado con exito'))\n        })\n    }\n\n    listNotes(autor:string){\n        let pathToList = path.join('notes',autor)\n        const notes = fs.readdirSync(pathToList,{withFileTypes:false})\n        notes.forEach(note => {\n            console.log(chalk.note['color'](note['title']))\n        });\n    }\n\n    showNote(autor:string, title:string){\n        title = title + '.json'\n        let pathToShow = path.join('notes',autor,title)\n        const note = fs.readFileSync(pathToShow)\n        console.log(chalk.note['color'].inverse(note['body']))\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"35f72426a82c0565d398d49afb7df7fe1a893ef7","contentHash":"b70b9ed81b5c8b00129b3e905828f48b988225bc8897e28e99d1d455c51272f8"}}